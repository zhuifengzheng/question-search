<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.terminus.jumax.uc.starter.dao.UcUserMapper">
  <resultMap id="BaseResultMap" type="io.terminus.jumax.uc.starter.model.UcUser">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="pk" jdbcType="BIGINT" property="pk" />
    <result column="tenant_id" jdbcType="INTEGER" property="tenantId" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="pwd_expire_at" jdbcType="DATE" property="pwdExpireAt" />
    <result column="enabled" jdbcType="BIT" property="enabled" />
    <result column="locked" jdbcType="BIT" property="locked" />
    <result column="deleted" jdbcType="BIT" property="deleted" />
    <result column="channel" jdbcType="VARCHAR" property="channel" />
    <result column="channel_type" jdbcType="VARCHAR" property="channelType" />
    <result column="source" jdbcType="VARCHAR" property="source" />
    <result column="source_type" jdbcType="VARCHAR" property="sourceType" />
    <result column="tag" jdbcType="VARCHAR" property="tag" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="extra" jdbcType="VARCHAR" property="extra" />
    <result column="updated_by" jdbcType="VARCHAR" property="updatedBy" />
    <result column="last_login_at" jdbcType="TIMESTAMP" property="lastLoginAt" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="record_update_msg" jdbcType="BIT" property="recordUpdateMsg" />
    <result column="record_create_msg" jdbcType="BIT" property="recordCreateMsg" />
    <result column="user_id_third" jdbcType="BIGINT" property="userIdThird" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, pk, tenant_id, username, nickname, avatar, mobile, email, password, pwd_expire_at, 
    enabled, locked, deleted, channel, channel_type, source, source_type, tag, version, 
    extra, updated_by, last_login_at, created_at, updated_at, record_update_msg, record_create_msg, 
    user_id_third
  </sql>
  <select id="selectByExample" parameterType="io.terminus.jumax.uc.starter.model.UcUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from uc_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from uc_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from uc_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="io.terminus.jumax.uc.starter.model.UcUserExample">
    delete from uc_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="io.terminus.jumax.uc.starter.model.UcUser">
    insert into uc_user (id, pk, tenant_id, 
      username, nickname, avatar, 
      mobile, email, password, 
      pwd_expire_at, enabled, locked, 
      deleted, channel, channel_type, 
      source, source_type, tag, 
      version, extra, updated_by, 
      last_login_at, created_at, updated_at, 
      record_update_msg, record_create_msg, user_id_third
      )
    values (#{id,jdbcType=BIGINT}, #{pk,jdbcType=BIGINT}, #{tenantId,jdbcType=INTEGER}, 
      #{username,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, #{avatar,jdbcType=VARCHAR}, 
      #{mobile,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{pwdExpireAt,jdbcType=DATE}, #{enabled,jdbcType=BIT}, #{locked,jdbcType=BIT}, 
      #{deleted,jdbcType=BIT}, #{channel,jdbcType=VARCHAR}, #{channelType,jdbcType=VARCHAR}, 
      #{source,jdbcType=VARCHAR}, #{sourceType,jdbcType=VARCHAR}, #{tag,jdbcType=VARCHAR}, 
      #{version,jdbcType=INTEGER}, #{extra,jdbcType=VARCHAR}, #{updatedBy,jdbcType=VARCHAR}, 
      #{lastLoginAt,jdbcType=TIMESTAMP}, #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}, 
      #{recordUpdateMsg,jdbcType=BIT}, #{recordCreateMsg,jdbcType=BIT}, #{userIdThird,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="io.terminus.jumax.uc.starter.model.UcUser">
    insert into uc_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="pk != null">
        pk,
      </if>
      <if test="tenantId != null">
        tenant_id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="pwdExpireAt != null">
        pwd_expire_at,
      </if>
      <if test="enabled != null">
        enabled,
      </if>
      <if test="locked != null">
        locked,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
      <if test="channel != null">
        channel,
      </if>
      <if test="channelType != null">
        channel_type,
      </if>
      <if test="source != null">
        source,
      </if>
      <if test="sourceType != null">
        source_type,
      </if>
      <if test="tag != null">
        tag,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="extra != null">
        extra,
      </if>
      <if test="updatedBy != null">
        updated_by,
      </if>
      <if test="lastLoginAt != null">
        last_login_at,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="recordUpdateMsg != null">
        record_update_msg,
      </if>
      <if test="recordCreateMsg != null">
        record_create_msg,
      </if>
      <if test="userIdThird != null">
        user_id_third,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="pk != null">
        #{pk,jdbcType=BIGINT},
      </if>
      <if test="tenantId != null">
        #{tenantId,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="pwdExpireAt != null">
        #{pwdExpireAt,jdbcType=DATE},
      </if>
      <if test="enabled != null">
        #{enabled,jdbcType=BIT},
      </if>
      <if test="locked != null">
        #{locked,jdbcType=BIT},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=BIT},
      </if>
      <if test="channel != null">
        #{channel,jdbcType=VARCHAR},
      </if>
      <if test="channelType != null">
        #{channelType,jdbcType=VARCHAR},
      </if>
      <if test="source != null">
        #{source,jdbcType=VARCHAR},
      </if>
      <if test="sourceType != null">
        #{sourceType,jdbcType=VARCHAR},
      </if>
      <if test="tag != null">
        #{tag,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
      <if test="extra != null">
        #{extra,jdbcType=VARCHAR},
      </if>
      <if test="updatedBy != null">
        #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginAt != null">
        #{lastLoginAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="recordUpdateMsg != null">
        #{recordUpdateMsg,jdbcType=BIT},
      </if>
      <if test="recordCreateMsg != null">
        #{recordCreateMsg,jdbcType=BIT},
      </if>
      <if test="userIdThird != null">
        #{userIdThird,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="io.terminus.jumax.uc.starter.model.UcUserExample" resultType="java.lang.Long">
    select count(*) from uc_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update uc_user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.pk != null">
        pk = #{record.pk,jdbcType=BIGINT},
      </if>
      <if test="record.tenantId != null">
        tenant_id = #{record.tenantId,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.nickname != null">
        nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.avatar != null">
        avatar = #{record.avatar,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.pwdExpireAt != null">
        pwd_expire_at = #{record.pwdExpireAt,jdbcType=DATE},
      </if>
      <if test="record.enabled != null">
        enabled = #{record.enabled,jdbcType=BIT},
      </if>
      <if test="record.locked != null">
        locked = #{record.locked,jdbcType=BIT},
      </if>
      <if test="record.deleted != null">
        deleted = #{record.deleted,jdbcType=BIT},
      </if>
      <if test="record.channel != null">
        channel = #{record.channel,jdbcType=VARCHAR},
      </if>
      <if test="record.channelType != null">
        channel_type = #{record.channelType,jdbcType=VARCHAR},
      </if>
      <if test="record.source != null">
        source = #{record.source,jdbcType=VARCHAR},
      </if>
      <if test="record.sourceType != null">
        source_type = #{record.sourceType,jdbcType=VARCHAR},
      </if>
      <if test="record.tag != null">
        tag = #{record.tag,jdbcType=VARCHAR},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=INTEGER},
      </if>
      <if test="record.extra != null">
        extra = #{record.extra,jdbcType=VARCHAR},
      </if>
      <if test="record.updatedBy != null">
        updated_by = #{record.updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="record.lastLoginAt != null">
        last_login_at = #{record.lastLoginAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdAt != null">
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedAt != null">
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.recordUpdateMsg != null">
        record_update_msg = #{record.recordUpdateMsg,jdbcType=BIT},
      </if>
      <if test="record.recordCreateMsg != null">
        record_create_msg = #{record.recordCreateMsg,jdbcType=BIT},
      </if>
      <if test="record.userIdThird != null">
        user_id_third = #{record.userIdThird,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update uc_user
    set id = #{record.id,jdbcType=BIGINT},
      pk = #{record.pk,jdbcType=BIGINT},
      tenant_id = #{record.tenantId,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      avatar = #{record.avatar,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      pwd_expire_at = #{record.pwdExpireAt,jdbcType=DATE},
      enabled = #{record.enabled,jdbcType=BIT},
      locked = #{record.locked,jdbcType=BIT},
      deleted = #{record.deleted,jdbcType=BIT},
      channel = #{record.channel,jdbcType=VARCHAR},
      channel_type = #{record.channelType,jdbcType=VARCHAR},
      source = #{record.source,jdbcType=VARCHAR},
      source_type = #{record.sourceType,jdbcType=VARCHAR},
      tag = #{record.tag,jdbcType=VARCHAR},
      version = #{record.version,jdbcType=INTEGER},
      extra = #{record.extra,jdbcType=VARCHAR},
      updated_by = #{record.updatedBy,jdbcType=VARCHAR},
      last_login_at = #{record.lastLoginAt,jdbcType=TIMESTAMP},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      record_update_msg = #{record.recordUpdateMsg,jdbcType=BIT},
      record_create_msg = #{record.recordCreateMsg,jdbcType=BIT},
      user_id_third = #{record.userIdThird,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="io.terminus.jumax.uc.starter.model.UcUser">
    update uc_user
    <set>
      <if test="pk != null">
        pk = #{pk,jdbcType=BIGINT},
      </if>
      <if test="tenantId != null">
        tenant_id = #{tenantId,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="pwdExpireAt != null">
        pwd_expire_at = #{pwdExpireAt,jdbcType=DATE},
      </if>
      <if test="enabled != null">
        enabled = #{enabled,jdbcType=BIT},
      </if>
      <if test="locked != null">
        locked = #{locked,jdbcType=BIT},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=BIT},
      </if>
      <if test="channel != null">
        channel = #{channel,jdbcType=VARCHAR},
      </if>
      <if test="channelType != null">
        channel_type = #{channelType,jdbcType=VARCHAR},
      </if>
      <if test="source != null">
        source = #{source,jdbcType=VARCHAR},
      </if>
      <if test="sourceType != null">
        source_type = #{sourceType,jdbcType=VARCHAR},
      </if>
      <if test="tag != null">
        tag = #{tag,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="extra != null">
        extra = #{extra,jdbcType=VARCHAR},
      </if>
      <if test="updatedBy != null">
        updated_by = #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginAt != null">
        last_login_at = #{lastLoginAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="recordUpdateMsg != null">
        record_update_msg = #{recordUpdateMsg,jdbcType=BIT},
      </if>
      <if test="recordCreateMsg != null">
        record_create_msg = #{recordCreateMsg,jdbcType=BIT},
      </if>
      <if test="userIdThird != null">
        user_id_third = #{userIdThird,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="io.terminus.jumax.uc.starter.model.UcUser">
    update uc_user
    set pk = #{pk,jdbcType=BIGINT},
      tenant_id = #{tenantId,jdbcType=INTEGER},
      username = #{username,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      pwd_expire_at = #{pwdExpireAt,jdbcType=DATE},
      enabled = #{enabled,jdbcType=BIT},
      locked = #{locked,jdbcType=BIT},
      deleted = #{deleted,jdbcType=BIT},
      channel = #{channel,jdbcType=VARCHAR},
      channel_type = #{channelType,jdbcType=VARCHAR},
      source = #{source,jdbcType=VARCHAR},
      source_type = #{sourceType,jdbcType=VARCHAR},
      tag = #{tag,jdbcType=VARCHAR},
      version = #{version,jdbcType=INTEGER},
      extra = #{extra,jdbcType=VARCHAR},
      updated_by = #{updatedBy,jdbcType=VARCHAR},
      last_login_at = #{lastLoginAt,jdbcType=TIMESTAMP},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      record_update_msg = #{recordUpdateMsg,jdbcType=BIT},
      record_create_msg = #{recordCreateMsg,jdbcType=BIT},
      user_id_third = #{userIdThird,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>