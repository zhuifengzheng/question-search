<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.terminus.jumax.uc.starter.dao.InviteActivityDayStatisticsMapper">
  <resultMap id="BaseResultMap" type="io.terminus.jumax.uc.starter.model.InviteActivityDayStatistics">
    <id column="invite_activity_day_statistics_id" jdbcType="BIGINT" property="inviteActivityDayStatisticsId" />
    <result column="tenant_id" jdbcType="BIGINT" property="tenantId" />
    <result column="invite_activity_id" jdbcType="BIGINT" property="inviteActivityId" />
    <result column="date" jdbcType="VARCHAR" property="date" />
    <result column="inviter_id" jdbcType="BIGINT" property="inviterId" />
    <result column="inviter_phone" jdbcType="VARCHAR" property="inviterPhone" />
    <result column="inviter_name" jdbcType="VARCHAR" property="inviterName" />
    <result column="user_type" jdbcType="TINYINT" property="userType" />
    <result column="invite_amount" jdbcType="INTEGER" property="inviteAmount" />
    <result column="reward" jdbcType="BIGINT" property="reward" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="extra_json" jdbcType="VARCHAR" property="extraJson" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    invite_activity_day_statistics_id, tenant_id, invite_activity_id, date, inviter_id, 
    inviter_phone, inviter_name, user_type, invite_amount, reward, version, extra_json, 
    created_at, updated_at
  </sql>
  <select id="selectByExample" parameterType="io.terminus.jumax.uc.starter.model.InviteActivityDayStatisticsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from invite_activity_day_statistics
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from invite_activity_day_statistics
    where invite_activity_day_statistics_id = #{inviteActivityDayStatisticsId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from invite_activity_day_statistics
    where invite_activity_day_statistics_id = #{inviteActivityDayStatisticsId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="io.terminus.jumax.uc.starter.model.InviteActivityDayStatisticsExample">
    delete from invite_activity_day_statistics
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="io.terminus.jumax.uc.starter.model.InviteActivityDayStatistics">
    insert into invite_activity_day_statistics (invite_activity_day_statistics_id, tenant_id, 
      invite_activity_id, date, inviter_id, 
      inviter_phone, inviter_name, user_type, 
      invite_amount, reward, version, 
      extra_json, created_at, updated_at
      )
    values (#{inviteActivityDayStatisticsId,jdbcType=BIGINT}, #{tenantId,jdbcType=BIGINT}, 
      #{inviteActivityId,jdbcType=BIGINT}, #{date,jdbcType=VARCHAR}, #{inviterId,jdbcType=BIGINT}, 
      #{inviterPhone,jdbcType=VARCHAR}, #{inviterName,jdbcType=VARCHAR}, #{userType,jdbcType=TINYINT}, 
      #{inviteAmount,jdbcType=INTEGER}, #{reward,jdbcType=BIGINT}, #{version,jdbcType=INTEGER}, 
      #{extraJson,jdbcType=VARCHAR}, #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="io.terminus.jumax.uc.starter.model.InviteActivityDayStatistics">
    insert into invite_activity_day_statistics
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="inviteActivityDayStatisticsId != null">
        invite_activity_day_statistics_id,
      </if>
      <if test="tenantId != null">
        tenant_id,
      </if>
      <if test="inviteActivityId != null">
        invite_activity_id,
      </if>
      <if test="date != null">
        date,
      </if>
      <if test="inviterId != null">
        inviter_id,
      </if>
      <if test="inviterPhone != null">
        inviter_phone,
      </if>
      <if test="inviterName != null">
        inviter_name,
      </if>
      <if test="userType != null">
        user_type,
      </if>
      <if test="inviteAmount != null">
        invite_amount,
      </if>
      <if test="reward != null">
        reward,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="extraJson != null">
        extra_json,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="inviteActivityDayStatisticsId != null">
        #{inviteActivityDayStatisticsId,jdbcType=BIGINT},
      </if>
      <if test="tenantId != null">
        #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="inviteActivityId != null">
        #{inviteActivityId,jdbcType=BIGINT},
      </if>
      <if test="date != null">
        #{date,jdbcType=VARCHAR},
      </if>
      <if test="inviterId != null">
        #{inviterId,jdbcType=BIGINT},
      </if>
      <if test="inviterPhone != null">
        #{inviterPhone,jdbcType=VARCHAR},
      </if>
      <if test="inviterName != null">
        #{inviterName,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        #{userType,jdbcType=TINYINT},
      </if>
      <if test="inviteAmount != null">
        #{inviteAmount,jdbcType=INTEGER},
      </if>
      <if test="reward != null">
        #{reward,jdbcType=BIGINT},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
      <if test="extraJson != null">
        #{extraJson,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="io.terminus.jumax.uc.starter.model.InviteActivityDayStatisticsExample" resultType="java.lang.Long">
    select count(*) from invite_activity_day_statistics
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update invite_activity_day_statistics
    <set>
      <if test="record.inviteActivityDayStatisticsId != null">
        invite_activity_day_statistics_id = #{record.inviteActivityDayStatisticsId,jdbcType=BIGINT},
      </if>
      <if test="record.tenantId != null">
        tenant_id = #{record.tenantId,jdbcType=BIGINT},
      </if>
      <if test="record.inviteActivityId != null">
        invite_activity_id = #{record.inviteActivityId,jdbcType=BIGINT},
      </if>
      <if test="record.date != null">
        date = #{record.date,jdbcType=VARCHAR},
      </if>
      <if test="record.inviterId != null">
        inviter_id = #{record.inviterId,jdbcType=BIGINT},
      </if>
      <if test="record.inviterPhone != null">
        inviter_phone = #{record.inviterPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.inviterName != null">
        inviter_name = #{record.inviterName,jdbcType=VARCHAR},
      </if>
      <if test="record.userType != null">
        user_type = #{record.userType,jdbcType=TINYINT},
      </if>
      <if test="record.inviteAmount != null">
        invite_amount = #{record.inviteAmount,jdbcType=INTEGER},
      </if>
      <if test="record.reward != null">
        reward = #{record.reward,jdbcType=BIGINT},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=INTEGER},
      </if>
      <if test="record.extraJson != null">
        extra_json = #{record.extraJson,jdbcType=VARCHAR},
      </if>
      <if test="record.createdAt != null">
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedAt != null">
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update invite_activity_day_statistics
    set invite_activity_day_statistics_id = #{record.inviteActivityDayStatisticsId,jdbcType=BIGINT},
      tenant_id = #{record.tenantId,jdbcType=BIGINT},
      invite_activity_id = #{record.inviteActivityId,jdbcType=BIGINT},
      date = #{record.date,jdbcType=VARCHAR},
      inviter_id = #{record.inviterId,jdbcType=BIGINT},
      inviter_phone = #{record.inviterPhone,jdbcType=VARCHAR},
      inviter_name = #{record.inviterName,jdbcType=VARCHAR},
      user_type = #{record.userType,jdbcType=TINYINT},
      invite_amount = #{record.inviteAmount,jdbcType=INTEGER},
      reward = #{record.reward,jdbcType=BIGINT},
      version = #{record.version,jdbcType=INTEGER},
      extra_json = #{record.extraJson,jdbcType=VARCHAR},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="io.terminus.jumax.uc.starter.model.InviteActivityDayStatistics">
    update invite_activity_day_statistics
    <set>
      <if test="tenantId != null">
        tenant_id = #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="inviteActivityId != null">
        invite_activity_id = #{inviteActivityId,jdbcType=BIGINT},
      </if>
      <if test="date != null">
        date = #{date,jdbcType=VARCHAR},
      </if>
      <if test="inviterId != null">
        inviter_id = #{inviterId,jdbcType=BIGINT},
      </if>
      <if test="inviterPhone != null">
        inviter_phone = #{inviterPhone,jdbcType=VARCHAR},
      </if>
      <if test="inviterName != null">
        inviter_name = #{inviterName,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        user_type = #{userType,jdbcType=TINYINT},
      </if>
      <if test="inviteAmount != null">
        invite_amount = #{inviteAmount,jdbcType=INTEGER},
      </if>
      <if test="reward != null">
        reward = #{reward,jdbcType=BIGINT},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="extraJson != null">
        extra_json = #{extraJson,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where invite_activity_day_statistics_id = #{inviteActivityDayStatisticsId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="io.terminus.jumax.uc.starter.model.InviteActivityDayStatistics">
    update invite_activity_day_statistics
    set tenant_id = #{tenantId,jdbcType=BIGINT},
      invite_activity_id = #{inviteActivityId,jdbcType=BIGINT},
      date = #{date,jdbcType=VARCHAR},
      inviter_id = #{inviterId,jdbcType=BIGINT},
      inviter_phone = #{inviterPhone,jdbcType=VARCHAR},
      inviter_name = #{inviterName,jdbcType=VARCHAR},
      user_type = #{userType,jdbcType=TINYINT},
      invite_amount = #{inviteAmount,jdbcType=INTEGER},
      reward = #{reward,jdbcType=BIGINT},
      version = #{version,jdbcType=INTEGER},
      extra_json = #{extraJson,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where invite_activity_day_statistics_id = #{inviteActivityDayStatisticsId,jdbcType=BIGINT}
  </update>
</mapper>